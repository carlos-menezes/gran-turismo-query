#[cfg(test)]
mod tests {
    use gran_turismo_query::packet::Packet;

    #[test]
    fn test_packet_parse() {
        let buf = [
            0x66, 0x83, 0x09, 0x68, 0x05, 0xc8, 0xf5, 0xa9, 0x77, 0x48, 0x09, 0x9a, 0xaf, 0x1e,
            0x9f, 0x5b, 0x15, 0x8d, 0xd1, 0xcb, 0xd6, 0x6d, 0x0f, 0xa2, 0x06, 0xfc, 0xb4, 0x36,
            0x44, 0xab, 0xf7, 0x69, 0x2f, 0x3a, 0xfa, 0xd7, 0x9c, 0xa8, 0xe9, 0x88, 0xef, 0x46,
            0x5f, 0x29, 0x00, 0xac, 0x5b, 0x4c, 0x9b, 0x47, 0x7f, 0x0d, 0x52, 0x69, 0x0c, 0xc6,
            0x79, 0x56, 0x44, 0xa9, 0xe4, 0xe4, 0x6d, 0x8c, 0x29, 0x59, 0x33, 0xfb, 0x20, 0x27,
            0x02, 0x50, 0xa9, 0x0b, 0xed, 0xcb, 0x5d, 0xab, 0x98, 0xd6, 0x07, 0x91, 0xe8, 0xa3,
            0x12, 0x94, 0x0c, 0x78, 0x09, 0x20, 0x78, 0x29, 0x50, 0x2f, 0xf5, 0x43, 0xf6, 0x97,
            0x40, 0x63, 0x34, 0x22, 0x41, 0xd8, 0x1e, 0xa6, 0x4c, 0x5b, 0xd4, 0xe9, 0xfc, 0xae,
            0x3e, 0xd4, 0x4e, 0x49, 0x74, 0x1b, 0x41, 0xa4, 0x01, 0x17, 0x94, 0x84, 0x4b, 0xf2,
            0x50, 0x38, 0xf9, 0x9a, 0xd3, 0x42, 0x02, 0xfc, 0x7a, 0x93, 0x8a, 0x6d, 0x6e, 0x27,
            0x81, 0x6e, 0x06, 0xc6, 0xa1, 0x61, 0x7f, 0xea, 0xe7, 0xc0, 0xc7, 0xbe, 0x40, 0x22,
            0xfd, 0xdc, 0x90, 0xdf, 0x25, 0x05, 0xd2, 0x50, 0xdb, 0x8f, 0x0c, 0xea, 0x80, 0x80,
            0x7d, 0xdb, 0x24, 0xa6, 0xb6, 0xe2, 0x29, 0xe9, 0xa3, 0x98, 0xe3, 0x6b, 0xc5, 0x49,
            0x1e, 0xe5, 0x60, 0x14, 0x20, 0x59, 0x3b, 0x37, 0x12, 0xce, 0x8a, 0x7e, 0xa9, 0xe7,
            0x68, 0x1e, 0x07, 0x6f, 0x49, 0x48, 0xdc, 0x4e, 0x02, 0x3c, 0xd9, 0xef, 0xf3, 0x2a,
            0x12, 0x7e, 0x9c, 0x43, 0xbc, 0x6c, 0x81, 0x22, 0x08, 0x3e, 0x92, 0x9f, 0xeb, 0x53,
            0xe5, 0x9c, 0x2a, 0x18, 0xb6, 0xf9, 0x08, 0x33, 0x80, 0xe1, 0x20, 0x6b, 0x67, 0xbf,
            0x99, 0xb0, 0xf2, 0x4f, 0x16, 0x4b, 0xce, 0x4a, 0x24, 0x5c, 0x35, 0x96, 0x00, 0xd3,
            0x7a, 0x07, 0x5a, 0x8b, 0xe5, 0x61, 0x94, 0xc7, 0xd2, 0x03, 0x84, 0x67, 0xfb, 0xba,
            0xe7, 0x46, 0xdc, 0xd9, 0xf8, 0x49, 0xe6, 0x56, 0x28, 0x43, 0x8c, 0xd1, 0x63, 0x5b,
            0x36, 0xdc, 0xa2, 0xbe, 0x73, 0x96, 0x98, 0x0b, 0x2e, 0x5e, 0x14, 0x9c, 0x96, 0x5a,
            0xf5, 0x19,
        ];

        let result = Packet::try_from(&buf);
        assert!(result.is_ok());
    }
}
